/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.movie.cinema;

import com.movie.cinema.db.AccountDao;
import com.movie.cinema.db.CommentDao;
import com.movie.cinema.model.Account;
import com.movie.cinema.model.Comment;
import com.movie.cinema.model.Movie;
import java.awt.GridLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;

/**
 *
 * @author Shijie Ma
 */
public class CommentPanel extends javax.swing.JPanel {
    
    MainFrame frame;
    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:ss:mm");

    // 评论数据 dao
    CommentDao commentDao = new CommentDao();
    // 用户数据 dao
    AccountDao accDao = new AccountDao();
    
    Movie movie;
    /**
     * Creates new form CommentPanel
     * @param movie
     */
    public CommentPanel(Movie movie) {
        this.frame = MainFrame.getInstance();
        this.movie = movie;
        initComponents();
        conPanel.setLayout(new GridLayout());
        updateData();
    }
    private void updateData(){
        
        List<Comment> list = commentDao.getComments(movie.getId());
        List<Integer> accIds = new ArrayList<>();
        list.forEach(c -> {
            accIds.add(c.getAccountid());
        });
        Map<Integer, Account> accs = accDao.getAccountsMap(accIds);
        
        conPanel.setVisible(false);
        conPanel.removeAll();
        
        conPanel.setLayout(new GridLayout(list.size(), 1));
        list.stream().map(comment -> new CommentGrid(comment, accs.get(comment.getAccountid()))).forEachOrdered(grid -> {
            conPanel.add(grid);
        });
        conPanel.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        commentBtn = new javax.swing.JButton();
        scrollPane = new javax.swing.JScrollPane();
        conPanel = new javax.swing.JPanel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        commentBtn.setText("Add Comment");
        commentBtn.setActionCommand("AddComment");
        commentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commentBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout conPanelLayout = new javax.swing.GroupLayout(conPanel);
        conPanel.setLayout(conPanelLayout);
        conPanelLayout.setHorizontalGroup(
            conPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 760, Short.MAX_VALUE)
        );
        conPanelLayout.setVerticalGroup(
            conPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 494, Short.MAX_VALUE)
        );

        scrollPane.setViewportView(conPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addComponent(commentBtn)
                        .addGap(0, 46, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(commentBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void commentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commentBtnActionPerformed
        Comment comment = new Comment();
        comment.setMovieid(movie.getId());
        comment.setAccountid(frame.acc.getId());
        comment.setComment(jTextArea1.getText());
        comment.setPublishtime(sdf.format(new Date()));
        commentDao.addComment(comment);
        BaseDialog.showInfo("Add comment successfully.");
        updateData();
    }//GEN-LAST:event_commentBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton commentBtn;
    private javax.swing.JPanel conPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JScrollPane scrollPane;
    // End of variables declaration//GEN-END:variables
}
